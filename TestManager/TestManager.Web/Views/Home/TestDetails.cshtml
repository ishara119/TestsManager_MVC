@model TestManager.Web.Models.ViewModels.TestResultDetailsViewModel
@{
    ViewData["Title"] = "TestDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var ResultList = Model.TestResultList;
    int TestId = ResultList.FirstOrDefault().Test.Id;
    //var UsersList = Model.UsersList;
    var UsersList = Model.UsersList.Select(x => new SelectListItem
    {
        Value = x.UserId.ToString(),
        Text = x.Name
    });

    string TestResultName = ResultList.FirstOrDefault().Type + ResultList.FirstOrDefault().Test.Date.ToShortDateString();

}

<div class="text-center">

    <div class="row mb-5">
        @TestResultName
    </div>

        <div class="row mb-2 mt-5">
            <span>
                <button type="button" data-toggle="modal" data-target="#newathlete" class="btn btn-primary">ADD NEW ATHLETE</button> &nbsp; &nbsp;
                <button type="button" data-toggle="modal" data-target="#deleteconfirmation" class="btn btn-danger">DELETE TEST</button>
            </span>

        </div>

        <div class="row mb-4">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Ranking</th>
                        <th>Distance </th>
                        <th>Fitnes Rating</th>
                    </tr>
                </thead>
                <tbody>
                    @if (ResultList.Count > 0)
                    {
                        @foreach (var x in ResultList)
                        {
                            <tr>
                                <td>@x.Name</td>
                                <td>@x.Result</td>
                                <td>
                                    @if (x.Result <= 1000)
                                    {<p>Below Average</p>}
                                    else if (x.Result > 1000 && x.Result <= 2000)
                                    {<p> Average</p>}
                                    else if (x.Result > 2000 && x.Result <= 3500)
                                    {<p>Good</p> }
                                    else if (x.Result > 3500)
                                    {<p>Very Good</p>}
                                </td>
                            </tr>
                        }
                    }

                </tbody>
            </table>
        </div>


    </div>

    <!-- new athlete Models -->
    <div class="modal fade" id="newathlete" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">ADD NEW ATHLETE TO TEST</h4>
                    <button class="closeeditbutton" data-dismiss="modal" type="button">&times;</button>
                </div>
                @using (Html.BeginForm("AddNewAthlete", "Home", FormMethod.Post))
                {
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="exampleInputEmail1">Name</label>
                            @Html.DropDownListFor(x => x.SelectedUserId, UsersList, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword1">Distance</label>
                            @*<input name="distance" type="number" class="form-control" id="distance" placeholder="distance">*@
                            @Html.TextBoxFor(m => m.SelectedResult, new { type = "number", min = "0", step = "0.01", @class = "form-control" })
                            @Html.HiddenFor(m => m.SelectedTestId, new { Value = @TestId })
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit"  class="btn btn-light btn-xs">Add</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="modal fade" id="deleteconfirmation" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete Test</h4>
                    <button class="closeeditbutton" data-dismiss="modal" type="button">&times;</button>
                </div>
                @using (Html.BeginForm("DeleteTest", "Home"))
                {
                    <div class="modal-body">

                        <div class="form-group">
                            <label for="exampleInputEmail1">Selected Test will be deleted, Continue ?</label>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="submit"  data-dismiss="modal" class="btn btn-light btn-xs">Yes</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>

                }
                
            </div>
    </div>

